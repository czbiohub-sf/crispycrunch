# Generated by Django 2.1 on 2018-08-11 00:33

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import main.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=40)),
                ('s3_bucket', models.CharField(default='jasonli-bucket', max_length=80)),
                ('s3_prefix', models.CharField(default='JasonHDR/96wp1sorted-fastq/', max_length=160)),
                ('results_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Data returned by external service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('description', models.CharField(blank=True, max_length=65536)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='GuideDesign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('genome', models.CharField(choices=[('hg19', 'Homo sapiens - Human - UCSC Feb. 2009 (GRCh37/hg19) + SNPs: 1000Genomes, ExaC'), ('todo', 'TODO: more genomes')], default='hg19', max_length=80)),
                ('pam', models.CharField(choices=[('NGG', '20bp-NGG - SpCas9, SpCas9-HF1, eSpCas9 1.1'), ('todo', 'TODO: more pams')], default='NGG', max_length=80)),
                ('targets', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=65536, validators=[main.validators.validate_chr_or_seq_or_enst]), default=['chr7:5569176-5569415', 'chr1:11,130,540-11,130,751'], help_text='Chr location or seq or ENST, one per line. Tag-in experiments require ENST.', size=None)),
                ('hdr_seq', models.CharField(blank=True, default='CGTGACCACATGGTCCTTCATGAGTATGTAAATGCTGCTGGGATTACAGGTGGCGGAttggaagttttgtttcaaggtccaggaagtggt', help_text='Sequence for Homology Directed Repair', max_length=65536, validators=[main.validators.validate_chr_or_seq_or_enst])),
                ('guide_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Data returned by external service')),
                ('donor_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Data returned by external service')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Experiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GuidePlateLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('group_by', models.CharField(choices=[('cell_type', 'Cell Type'), ('random', 'Random'), ('todo', 'TODO: more plate groupings')], default='cell_type', max_length=40)),
                ('order_by', models.CharField(choices=[('alphabetical', 'Alphabetical'), ('todo', 'TODO: more plate orderings')], default='alphabetical', max_length=40)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GuideSelection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('selected_guides_tagin', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='sgRNAs from tagin.stembio.org')),
                ('selected_guides', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='sgRNAs from crispor.tefor.net')),
                ('selected_donors', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='ssDNAs from tagin.stembio.org')),
                ('guide_design', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.GuideDesign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrimerDesign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('max_amplicon_length', models.IntegerField(default=400)),
                ('primer_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Data returned by external service')),
                ('guide_selection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.GuideSelection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrimerPlateLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_by', models.CharField(choices=[('cell_type', 'Cell Type'), ('random', 'Random'), ('todo', 'TODO: more plate groupings')], default='cell_type', max_length=40)),
                ('order_by', models.CharField(choices=[('alphabetical', 'Alphabetical'), ('todo', 'TODO: more plate orderings')], default='alphabetical', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='PrimerSelection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('selected_primers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Primers from crispor.tefor.net')),
                ('primer_design', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.PrimerDesign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='researcher',
            unique_together={('first_name', 'last_name')},
        ),
        migrations.AddField(
            model_name='primerplatelayout',
            name='primer_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.PrimerSelection'),
        ),
        migrations.AddField(
            model_name='guideplatelayout',
            name='guide_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.GuideSelection'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='researcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Researcher'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Experiment'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='researcher',
            field=models.ForeignKey(help_text='The researcher doing the analysis', on_delete=django.db.models.deletion.PROTECT, to='main.Researcher'),
        ),
    ]
