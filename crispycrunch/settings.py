"""
Django settings for crispycrunch project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


if 'RDS_DB_NAME' in os.environ:  # prod
    DEBUG = False
    SECRET_KEY = os.environ['DJANGO_SECRET_KEY']
    # TODO (gdingle): how to get this working with AWS load balancer?
    # see https://www.vincit.fi/en/blog/deploying-django-elastic-beanstalk-https-redirects-functional-health-checks/
    # SECURE_SSL_REDIRECT = True
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': '{levelname} {asctime} [{name}.{funcName}:{lineno}] {message}',
                'style': '{',
                'datefmt': '%Y-%m-%d %H:%M:%S'
            },
        },
        'handlers': {
            'logfile': {
                'level': 'DEBUG',
                'class': 'logging.handlers.RotatingFileHandler',
                'filename': '/opt/python/log/django.log',
                'maxBytes': 1024 * 1024,
                'backupCount': 10,
                'formatter': 'verbose',
            },
            'mail_admins': {
                'level': 'ERROR',
                # TODO (gdingle): switch to sentry? or airbrake?
                # see https://github.com/krisys/django-error-email-throttle/blob/18b61824d716e887173a224ef696a77cceae98ee/error_email_throttle/handler.py#L58
                # TODO (gdingle): keep AdminEmailHandler?
                'class': 'error_email_throttle.handler.AdminEmailThrottler',
                # 'class': 'django.utils.log.AdminEmailHandler',
                'include_html': False,
            },
        },
        'loggers': {
            'django': {
                'level': 'INFO',
                'handlers': [
                    'logfile',
                    'mail_admins'
                ],
            },
            '': {
                'level': 'INFO',
                'handlers': [
                    'logfile',
                    'mail_admins'
                ],
            },
        },
    }
else:  # dev
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
    DEBUG = True
    SECRET_KEY = 'dev'
    # See https://www.caktusgroup.com/blog/2015/01/27/Django-Logging-Configuration-logging_config-default-settings-logger/
    LOGGING_CONFIG = None
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'root': {
            'level': 'INFO',
            'handlers': ['console'],
        },
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
    }
    import logging.config
    logging.config.dictConfig(LOGGING)


ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '*',
    # TODO (gdingle): fetch load balancer IP dynamically with
    # https://serverfault.com/questions/640809/aws-ec2-and-django-allowed-hosts
    # TODO (gdingle): will this work with both string host and IPs?
    # 'crispycrunch.us-west-2.elasticbeanstalk.com',
    # 'crispycrunch.czbiohub.org',
    # '54.218.30.243',
    # 'ec2-54-218-30-243.us-west-2.compute.amazonaws.com',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # Start apps crispycrunch
    'debug_toolbar',
    'main.apps.MainConfig',
    'bootstrap4',
    'error_email_throttle',
    # End crispycrunch apps
]

# See https://docs.djangoproject.com/en/2.1/ref/middleware/#middleware-ordering
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # For access to demo account: https://github.com/aaugustin/django-sesame
    'sesame.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # TODO (gdingle): turn this on when cache bugs all fixed
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Start crispycrunch
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # ENd crispycrunch
]

# For access to demo account: https://github.com/aaugustin/django-sesame
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'sesame.backends.ModelBackend'
]

ROOT_URLCONF = 'crispycrunch.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # ADDED BY GDINGLE
                'django_settings_export.settings_export',
            ],
            'string_if_invalid': '{{%s}}',  # added by gdingle
        },
    },
]

WSGI_APPLICATION = 'crispycrunch.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
if 'RDS_DB_NAME' in os.environ:  # prod
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }
else:  # local dev with remote
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'postgres',
            'USER': 'postgres',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# BEGIN ADDED BY GDINGLE
TIME_ZONE = 'America/Los_Angeles'

BOOTSTRAP4 = {
    # Set placeholder attributes to label if no placeholder is provided
    'set_placeholder': False,
    'required_css_class': 'required',
}

LOGIN_REDIRECT_URL = '/main/'
LOGOUT_REDIRECT_URL = '/?logout=1'
SESSION_COOKIE_AGE = 31449600  # 1year


EMAIL_BACKEND = 'django_ses.SESBackend'

# These are optional -- if they're set as environment variables they won't
# need to be set here as well
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')


# Additionally, if you are not using the default AWS region of us-east-1,
# you need to specify a region, like so:

AWS_SES_REGION_NAME = 'us-west-2'
AWS_SES_REGION_ENDPOINT = 'email.us-west-2.amazonaws.com'

ADMINS = [
    # First admin is used as point of contact throughout site
    # All admins receive error emails.
    # Make sure you verify here: https://us-west-2.console.aws.amazon.com/ses/home?region=us-west-2#verified-senders-email:
    ('Greg Dingle', 'gdingle@chanzuckerberg.com'),
]
ADMIN_EMAIL = ADMINS[0][1]

# Amazon SES requires a valid email address for sending.
# SERVER_EMAIL = 'no-reply@crispycrunch.czbiohub.org'
SERVER_EMAIL = ADMIN_EMAIL


SETTINGS_EXPORT = [
    'ADMIN_EMAIL',
]

# See https://docs.djangoproject.com/en/2.1/topics/cache/
# TODO (gdingle): turn this on when cache bugs all fixed#
# # The cache alias to use for storage.
# CACHE_MIDDLEWARE_ALIAS = 'default'
# # The number of seconds each page should be cached.
# CACHE_MIDDLEWARE_SECONDS = 3600 * 24 * 14  # two weeks, same as requests_cache currently
# # If the cache is shared across multiple sites using the same Django installation, set this to the name of the site, or some other string that is unique to this Django instance, to prevent key collisions. Use an empty string if you donâ€™t care.
# CACHE_MIDDLEWARE_KEY_PREFIX = ''

# https://django-debug-toolbar.readthedocs.io/en/latest/installation.html#internal-ips
INTERNAL_IPS = [
    '127.0.0.1',
    'localhost',
    # Biohub HUBwifi
    '64.71.0.146',
]

# See https://django-debug-toolbar.readthedocs.io/en/latest/panels.html#non-default-built-in-panels
DEBUG_TOOLBAR_PANELS = [
    # 'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    # 'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    # 'debug_toolbar.panels.templates.TemplatesPanel',
    # 'debug_toolbar.panels.cache.CachePanel',
    # 'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    # 'debug_toolbar.panels.profiling.ProfilingPanel',
]

# END ADDED BY GDINGLE
